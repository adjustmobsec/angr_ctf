9:15am.

You stare blankly at your 2012 Macbook Air and instinctively reach for your cof-
fee. You pull the mug up to your lips to take a sip, but, much to your despair,
it's completely empty.

It's going to be a long day.

A notification pops up on the screen. It's an email from Kelly, your manager.
It has been three months into your internship at one of the most well-known
software companies in the world, and you have been tasked to find security vul-
nerabilities in their primary competitor's software. It sounded exciting when
you signed up, but you're quite tired of pouring over hundreds of binaries by
hand, manually reverse engineering the software trying to find a stray buffer
overflow or hidden password.

Reluctantly, you open the email.

- Hello,
- Good morning!
-
- We got ahold of a few more binaries from Eve Elle Software that seem to be in-
- cluded in the next release of their software. They seem to have a backdoor into
- their system if you type in the correct password, but the password seems to be
- encrypted with a complex algorithm before it is compared with what you type in,
- so it won't be easy to retrieve.
-
- Can you get the passwords on my desk before noon?
-
- Thanks,
- Kelly
- Security Team Manager
- Skynet Software

*Sigh*

Another notification. This time it's an email from Jeff. He's sitting right ac-
ross from you, through the cubicle wall and about a hundred cans of Red Bull he
proudly displays on his desk, as if his addiction is some accomplishment.

- Hey,
-
- I heard you were getting bored of reverse engineering these by hand. I
- read about something called "symbolic execution" that might make your job a
- little easier. You should check it out! http://angr.io
-
- Thank me later,
- Jeff

Odd.

Jeff doesn't usually offer any help, ever. Regardless, you aren't excited about
dissecting the binaries by hand, so you figure you might as well get started
with symbolic execution.
