${
import random, os
random.seed(os.urandom(8))
userdef_charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
userdef = [''.join([random.choice(userdef_charset) for _ in range(8)]) for _ in range(2)]
}$

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdint.h>

#define USERDEF0 "${ userdef[0] }$"
#define USERDEF1 "${ userdef[1] }$"
#define LEN_USERDEF ${ write(len(userdef[0])) }$

char msg[] = "${ description }$";

char buffer0[4];
char buffer1[4];
char password0[9];

void print_msg() {
  printf("%s", msg);
}

int complex_function(int value, int i) {
#define LAMBDA 23
  if (!('A' <= value && value <= 'Z')) {
    printf("Try again.\n");
    exit(1);
  }
  return ((value - 'A' + (LAMBDA * i)) % ('Z' - 'A' + 1)) + 'A';
}

int main(int argc, char* argv[]) {
  print_msg();

  memset(password0, 0, 9);
  memset(buffer0, 0, 4);
  memset(buffer1, 0, 4);
  memcpy(password0, USERDEF0, 8);

  for (int i=0; i<LEN_USERDEF; ++i) {
    password0[i] = complex_function(password0[i], i+9);
  }

  printf("Enter the password: ");
  scanf("%u %u", (uint32_t*) buffer0, (uint32_t*) buffer1);

  for (int i=0; i<LEN_USERDEF; ++i) {
    buffer0[i] = complex_function(buffer0[i], i+11);
    buffer1[i] = complex_function(buffer1[i], i+12);
  }

  if (strncmp(buffer0, password0, 4) || strncmp(buffer1, &password0[4], 4)) {
    printf("Try again.\n");
  } else {
    printf("Good Job.\n");
  }
}
